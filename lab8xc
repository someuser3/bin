#!/bin/bash
#
# Lab Objective: Make a shell script that will take two arguments;
# complain and exit if the first doesn't exist, and set a default
# value of 10 if the second doesn't exist.
#
# $1 is the first argument
# $2 is the second argument
#
# Note: Using string operators this script is 3 lines long including the #!/bin/bash line.

# Assigning $1 and $2 values to $VAR1 and #VAR2:
VAR1="${1:?Error; an argument is not defined}"
VAR2="${2:-10}"
# Test lines:
echo "VAR1=$VAR1"
echo "VAR2=$VAR2"
echo "\$1 = $1"
echo "\$2 = $2"
echo "Number of positional parameters: "$#""
# See here: http://www.cyberciti.biz/tips/bash-shell-parameter-substitution-2.html
# More information: https://bash.cyberciti.biz/guide/Default_shell_variables_value
# Even more useful related information:
# http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_02


# Alternatively, there is a way to re-set positional parameters $1 and $2 on one line.
# More work is needed if more than two parameters are expected because the following set
# command will wipe all but $1 and $2 parameters. See http://stackoverflow.com/a/4827707
set -- "${1:?Error; an argument is not defined}" "${2:-10}"

# Test lines:
echo
echo "Note that there are always two parameters now regardless of how many you've passed:"
echo "\$1 = $1"
echo "\$2 = $2"
echo "Number of positional parameters: "$#""
